y < x * a
x < 4
a < 20
y < 4 * 20
"y" < 4 * 20
y <- a * z
a <- 4
z <- 20
y
a <- 4
z <- 20
y <- a * z
y
mean(1:5)
source('~/.active-rstudio-document')
mean(1:5)
sd(0:100)
mean(1:5)
8:27
sd(0:100)
2 + 2
mean(1:5)
source('~/github/Introduction to R/TestScript.R', echo=TRUE)
source('~/github/Introduction to R/TestScript.R', echo=TRUE)
source('~/github/Introduction to R/TestScript.R', echo=TRUE)
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nnet", "rpart", "spatial", "survival"))
install.packages(c("cluster", "foreign", "MASS", "Matrix", "mgcv", "rpart", "survival"))
install.packages(c("cluster", "foreign", "MASS", "Matrix", "mgcv", "rpart", "survival"))
install.packages(c("cluster", "foreign", "MASS", "Matrix", "mgcv", "rpart", "survival"))
install.packages("rmarkdown", dependencies=TRUE)
install.packages(c("cluster", "foreign", "MASS", "Matrix", "mgcv", "rpart", "survival"))
install.packages("rmarkdown", dependencies=TRUE)
install.packages("rmarkdown", type="binary")
install.packages("yaml", type="binary")
install.packages("yaml", type = "binary")
install.packages("digest", type="binary")
install.packages("stringr", type="binary")
install.packages("evaluate", type="binary")
install.packages("knitr", type="binary")
install.packages("Rcpp", type="binary")
install.packages("caTools", type="binary")
plot(cars)
plot(cars)
source('~/github/Introduction to R/TestScript.R', echo=TRUE)
1:10
??plotting
?"+"
??"regression model"
help("mean")
??"regression model"
help("+")
help("if")
help.search("plotting")
a_vector <- c(1, 3, 6, 10)
apropos("vector")
appropos("[4-9]")
apropos("[4-9]")
example(plot)
demo()
demo(japanese)
demo(Japanese)
browseVignettes()
8:27
R-help
RSiteSearch
sd(0:100)
demo(plot math)
demo(plot math)
demo()
demo(plotmath)
1:5 + 6:10
1:5 + 6:10
c(1, 3, 6, 10, 15) + c(0, 1, 3, 6, 10)
c(1, 2, 3, 4, 5) + c(6, 7, 8, 9, 10)
1:5
c(1, 2, 3, 4, 5)
356:5870
sum(1:5)
median(1:5)
sum(1, 2, 3, 4, 5)
median(1, 2, 3, 4, 5)
install.packages("devtools")
??git
??("git pull")
??gitpull
??git
install.packages("github_pull(pull)")
install.packages("github_pull")
install.packages("github_pull")
?github_pull
??github_pull
install.packages(devtools)
getwd()
dir(getwd())
# load data
hist.rates <- read.csv("/Users/TdR/Coding/R/Finance/USD Exchange rates.csv")
# load data
hist.rates <- read.csv("/Users/TdR/Coding/Machine Learning/R/Finance/USD Exchange rates.csv")
# load libraries
library(forecast)
library(plotrix)
# load libraries
library(forecast)
install.packages("quantmod")
# load libraries
library(forecast)
library(plotrix)
# EDA
str( hist.rates )
# load data
hist.rates <- read.csv("/Users/TdR/Coding/Machine Learning/R/Finance/EUR_USD Historical Data.csv")
# EDA
str( hist.rates )
head( hist.rates, 5 )
tail( hist.rates, 5 )
summary( hist.rates )
# create time series
eurusd.ts <- ts( hist.rates$Price,
start = c( 2010, 25),
end = c( 2019, 22 ),
frequency = 365 )
# plot time series
plot( eurusd.ts, ylab = "Exchange rate", main = "Euro to USD Exchange rate 2010 - 2019" )
# partition the data
nValid <- 365
nTrain <- length( eurusd.ts ) - nValid
eurusd.train.ts <- window( eurusd.ts,
start = c( 2010, 25 ),
end = c( 2017, nTrain ),
frequency = 365 )
eurusd.valid.ts <- window( eurusd.ts,
start = c( 2010, nTrain + 1 ),
end = c( 2010, nTrain + nValid ),
frequency = 365 )
# holt-winters
hwin <- ets( eurusd.train.ts, model = "MAA" )
getwd()
~
quit
ls
cd ~
jhd
# load data
googleScore <- read.csv(multiTimeline.csv)
# load data
googleScore <- read.csv("/Users/TdR/Coding/Machine Learning/sharing-economy/multiTimeline.csv")
# load libraries
library(tidyverse)
plot(googleScore)
head(googleScore)
names(googleScore)
head(googleScore, 20)
View(googleScore)
# load data
googleScoreUS <- read.csv("/Users/TdR/Coding/Machine Learning/sharing-economy/multiTimelineUS.csv")
googleScoreWorld <- read.csv("/Users/TdR/Coding/Machine Learning/sharing-economy/multiTimelineWorldwide.csv")
# load data
googleScoreUS <- read.csv("/Users/TdR/Coding/Machine Learning/sharing-economy/multiTimelineUS.csv")
googleScoreWorld <- read.csv("/Users/TdR/Coding/Machine Learning/sharing-economy/multiTimelineWorldwide.csv")
head(googleScoreUS, 20)
tail(googleScoreUS, 10)
head(googleScoreWorld, 10)
tail(googleScoreWorld, 10)
str(googleScoreUS)
googleScoreUS$Month <- as.character(googleScoreUS$Month)
googleScoreWorld$Month <- as.character(googleScoreWorld$Month)
str(googleScoreUS)
str(googleScoreWorld)
# change Factor for World from factor to integer
googleScoreWorld$Worldwide <- as.integer(googleScoreWorld$Worldwide)
str(googleScoreUS)
str(googleScoreWorld)
# change Month from character to date
googleScoreUS$Month <- as.Date(googleScoreUS$Month)
# load data (trend data from Google Trends)
googleScoreUS <- read.csv("/Users/TdR/Coding/Machine Learning/sharing-economy/multiTimelineUS.csv")
googleScoreWorld <- read.csv("/Users/TdR/Coding/Machine Learning/sharing-economy/multiTimelineWorldwide.csv")
# view last 10 rows
tail(googleScoreUS, 10)
tail(googleScoreWorld, 10)
# get structure
str(googleScoreUS)
# drop Month old column
googleScoreUS$Month.old <- NULL
googleScoreWorld$Month.old <- NULL
# change Month from factor to character type
googleScoreUS$Month <- as.character(googleScoreUS$Month)
googleScoreWorld$Month <- as.character(googleScoreWorld$Month)
# get structure
str(googleScoreUS)
str(googleScoreWorld)
# change Score for World from factor to integer
googleScoreWorld$Worldwide <- as.integer(googleScoreWorld$Worldwide)
# change Month from character to date
googleScoreUS$Month <- as.Date(googleScoreUS$Month)
googleScoreWorld$Month <- as.Date(googleScoreWorld$Month)
# get structure
str(googleScoreUS)
str(googleScoreWorld)
# plot data
plot(googleScoreUS)
plot(googleScoreWorld)
# quick plot data
plot(googleScoreUS)
View(googleScoreUS)
View(googleScoreWorld)
# visualize data
ggplot( googleScore, aes( x = Month, y = US ) ) +
geom_point( stat = "identity", colour = "Dodgerblue3" ) +
labs( title = "Scatterplot for Height and Weight Data",
subtitle = "Measurements",
caption = "Data source: Prof. Theodore Whitfield",
tag = "Figure 3",
x = "Height",
y = "Weight",
colour = "Gears" ) +
geom_smooth( method = 'lm', formula = y ~ x ) +
theme_light()
# visualize data
ggplot( googleScoreUS, aes( x = Month, y = US ) ) +
geom_point( stat = "identity", colour = "Dodgerblue3" ) +
labs( title = "Scatterplot for Height and Weight Data",
subtitle = "Measurements",
caption = "Data source: Prof. Theodore Whitfield",
tag = "Figure 3",
x = "Height",
y = "Weight",
colour = "Gears" ) +
geom_smooth( method = 'lm', formula = y ~ x ) +
theme_light()
# visualize data
ggplot( googleScoreUS, aes( x = Month, y = US ) ) +
geom_point( stat = "identity", colour = "Dodgerblue3" ) +
labs( title = "Scatterplot for Height and Weight Data",
subtitle = "Measurements",
caption = "Data source: Prof. Theodore Whitfield",
tag = "Figure 3",
x = "Height",
y = "Weight",
colour = "Gears" ) +
theme_light()
# visualize data
ggplot( googleScoreUS, aes( x = Month, y = US ) ) +
geom_point( stat = "identity", colour = "Dodgerblue3" ) +
labs( title = "Scatterplot for Height and Weight Data",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Height",
y = "Weight",
colour = "Gears" ) +
theme_light()
# visualize data
ggplot( googleScoreUS, aes( x = Month, y = US ) ) +
geom_point( stat = "identity", colour = "Dodgerblue3" ) +
labs( title = "Scatterplot for Height and Weight Data",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Interest Score",
colour = "Gears" ) +
theme_light()
# visualize data
ggplot( googleScoreUS, aes( x = Month, y = US ) ) +
geom_point( stat = "identity", colour = "Dodgerblue3" ) +
labs( title = "Interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Interest Score",
colour = "Gears" ) +
theme_light()
# visualize data
ggplot( googleScoreUS, aes( x = Month, y = US ) ) +
geom_point( stat = "identity", colour = "Dodgerblue3" ) +
labs( title = "Interest in Sharing Economy measured by Google Searches",
subtitle = "Numbers represent search interest relative to the highest point on the chart for the given region and time.",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Interest Score",
colour = "Gears" ) +
theme_light()
# visualize data
ggplot( googleScoreUS, aes( x = Month, y = US ) ) +
geom_point( stat = "identity", colour = "Dodgerblue3" ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Interest Score",
colour = "Gears" ) +
theme_light()
# visualize data
ggplot( googleScoreUS, aes( x = Month, y = US ) ) +
geom_line( stat = "identity", colour = "Dodgerblue3" ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Interest Score",
colour = "Gears" ) +
theme_light()
geom_line( googleScoreWorld, aes( y = Worldwide, color= "Green") +
# visualize data
ggplot( googleScoreUS, aes( x = Month, y = US ) ) +
geom_line( stat = "identity", colour = "Dodgerblue3" ) +
geom_line( googleScoreWorld, aes( y = Worldwide, color= "Green") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest",
colour = "Gears" ) +
theme_light()
# combine to one dataframe
googleScoreUS$World <- googleScoreWorld$Worldwide
# combine to one dataframe
googleScore <- cbind( googleScoreUS, googleScoreWorld$Worldwide )
head( googleScore )
colnames(googleScore$`googleScoreWorld$Worldwide`) <- "World"
colnames(googleScore$`googleScoreWorld$Worldwide`) <- c("World")
colnames(googleScore)[3] <- "World"
# view results
head(googleScore)
# visualize data
ggplot( googleScore, aes( x = Month, y = US ) ) +
geom_line( stat = "identity", colour = "Dodgerblue3" ) +
geom_line( aes( y = World, color= "Green") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest",
colour = "Gears" ) +
theme_light()
# visualize data
ggplot( googleScore, aes( x = Month, y = US ) ) +
geom_line( stat = "identity", colour = "Dodgerblue3" ) +
geom_line( aes( y = World, color= "Green") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest" ) +
theme_light()
# visualize data
ggplot( googleScore, aes( x = Month, y = US ) ) +
geom_line( stat = "identity", colour = "Dodgerblue3" ) +
geom_line( aes( y = World, color= "seagreen2") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest" ) +
theme_light()
# visualize data
ggplot( googleScore, aes( x = Month, y = US ) ) +
geom_line( stat = "identity", colour = "Dodgerblue3" ) +
geom_line( aes( y = World, color= "seagreen2") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest" ) +
theme_light()
# visualize data
ggplot( googleScore, aes( x = Month, y = US ) ) +
geom_line( stat = "identity", colour = "Dodgerblue3" ) +
geom_line( aes( y = World, color= "Seagreen2") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest" ) +
theme_light()
# visualize data
ggplot( data = googleScore, aes( x = Month ) ) +
geom_line( aes( y = US, colour = "Dodgerblue3" ) ) +
geom_line( aes( y = World, colour= "Seagreen2") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest" ) +
theme_light()
# visualize data
ggplot( data = googleScore, aes( x = Month ) ) +
geom_line( aes( y = US, colour = "Dodgerblue3" ) ) +
geom_line( aes( y = World, colour= "Seagreen") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest" ) +
theme_light()
# visualize data
ggplot( data = googleScore, aes( x = Month ) ) +
geom_line( aes( y = US, colour = "US" ) ) +
geom_line( aes( y = World, colour= "World") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest" ) +
theme_light()
# visualize data
ggplot( data = googleScore, aes( x = Month ) ) +
geom_line( aes( y = US, colour = "US" ) ) +
geom_line( aes( y = World, colour= "World") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest",
colours = "Gears") +
theme_light()
# visualize data
ggplot( data = googleScore, aes( x = Month ) ) +
geom_line( aes( y = US, colour = "US" ) ) +
geom_line( aes( y = World, colour= "World") ) +
labs( title = "Relative interest in Sharing Economy measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest",
colours = "Gears") +
scale_colour_manual("",
breaks = c("US", "World"),
values = c("Dodgerblue3", "Grey50")) +
theme_light()
# visualize data
ggplot( data = googleScore, aes( x = Month ) ) +
geom_line( aes( y = US, colour = "US" ) ) +
geom_line( aes( y = World, colour= "World") ) +
labs( title = "Relative interest in Sharing Economy, measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest",
colours = "Gears") +
scale_colour_manual("",
breaks = c("US", "World"),
values = c("Dodgerblue3", "Grey50")) +
scale_x_continuous( breaks = round( seq( min(googleScore$Month), max(googleScore$Month), by = 1),1)) +
theme_light()
# visualize data
ggplot( data = googleScore, aes( x = Month ) ) +
geom_line( aes( y = US, colour = "US" ) ) +
geom_line( aes( y = World, colour= "World") ) +
labs( title = "Relative interest in Sharing Economy, measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest",
colours = "Gears") +
scale_colour_manual("",
breaks = c("US", "World"),
values = c("Dodgerblue3", "Grey50")) +
theme_light()
# set working director
setwd("/Users/TdR/Coding/Machine Learning/sharing-economy/")
# open file
jpeg("googleScore.jpg", width = 2222, height = "816")
# open file
jpeg("googleScore.jpg", width = 2222, height = 816)
# visualize data
ggplot( data = googleScore, aes( x = Month ) ) +
geom_line( aes( y = US, colour = "US" ) ) +
geom_line( aes( y = World, colour= "World") ) +
labs( title = "Relative interest in Sharing Economy, measured by Google Searches",
subtitle = "Interest",
caption = "Data source: Google Trends",
tag = "Figure 1",
x = "Time",
y = "Relative Interest",
colours = "Gears") +
scale_colour_manual("",
breaks = c("US", "World"),
values = c("Dodgerblue3", "Grey50")) +
theme_light()
# Close the file
dev.off()
